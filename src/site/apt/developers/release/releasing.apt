 -----
 Releasing A Maven Project
 -----
 Jason van Zyl
 -----
 9 December 2006
 -----

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

Releasing A Maven Project

 What follows is a description of releasing a Maven project to a staging repository, whereupon it is scruntized by
 the community, approved, and transfered to a production repository. In order to release a project you must have the 
 following setup in your <<<$HOME/.m2/settings.xml>>> which is a profile which provides settings for:
 
 * Your GPG passphrase which will be used to sign all artifacts that are released. If you have no idea what your
   GPG passphrase is then refer to {{{pmc-release-process.html}this}}.
            
 * The repository that you want to deploy the release to.

 Here's what your <<<release>>> profile might look like in your <<<$HOME/.m2/settings.xml>>>:
 
+-----+
<settings>
  ...
  <profiles>
    <profile>
      <id>release</id>
      <properties>
        <gpg.passphrase>secretPhrase</gpg.passphrase>
        <deploy.altRepository>apache.releases::default::scp://hostname/path/to/directory/stage/repo</deploy.altRepository>
      </properties>
    </profile>
  </profiles>
  ...
</settings>
+-----+  

 Everything that you need to release has been configured in the POM all Maven projects inherit from. The release plugin configuration
 being used is the following:

%{snippet|id=release-plugin-configuration|url=http://svn.apache.org/repos/asf/maven/pom/trunk/maven/pom.xml}
 
 And the profile being used for releases is the following:
 
%{snippet|id=release-profile|url=http://svn.apache.org/repos/asf/maven/pom/trunk/maven/pom.xml}

 All you need to do in order to release are the familiar 
 
+-----+
mvn release:prepare

mvn release:perform
+-----+

Copying from the staging repo to the production repo

 Once the release is deemed fit for public consumption it can be transfered to a production repository where it will
 be available to all users. Note that for now the stage plugin hasn't been released yet and you need to build it yourself.
 As an example

+-----+
mvn stage:copy -Dsource="http://people.apache.org/~carlos/staging-repo" -Dtarget="scp://people.apache.org/www/people.apache.org/repo/m2-ibiblio-rsync-repository" -Dversion=2.3 -DrepositoryId=apache.releases
+-----+

 TODO for some reason the repositoryId configuration doesn't work yet
 repositoryId parameter is required if you need the server configuration from the settings file (username, password,...).


Releasing a Project Directly into a Production Repository

 If you want to release directly to a production repository then you simply configure the staging repository point at 
 the production repository by using the following in your <<<$HOME/.m2/settings.xml>>>:

+-----+
<settings>
  ...
  <profiles>
    <profile>
      <id>release</id>
      <properties>
        <gpg.passphrase>secretPhrase</gpg.passphrase>
        <deploy.altRepository>apache.releases::default::scp://people.apache.org/www/people.apache.org/repo/m2-ibiblio-rsync-repository</deploy.altRepository>
      </properties>
    </profile>
  </profiles>
  ...
</settings>
+-----+  

 This will allow you to bypass the staging phase and push the release directly into a production repository. It is assume that
 you have pushed a snapshot somewhere that people have looked at and approved of.
