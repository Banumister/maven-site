 ----
 Repository Management
 -----

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Repository Management

*  What is a Build Artifact Repository Manager

   The purpose of a <Maven repository> is to hold all software libraries used within an organization. The responsibility
    of a <Build Artifact Repository Manager> is to

    1. <<Proxy content from remote artifact repositories>>.

    The proxy functionality gives increased <speed>, better <availability> and makes it <easier find and add
    dependencies> to their projects (no more which repo holds artifactX?).
   
    2. <<Share artifacts between developers>>.

    The repository supports deployment of internal and external snapshots and releases and advanced security options
    can be to restrict access to sensitive artifacts.
    This functionality is required to work effectively with a large number of Maven projects and without it it is
    hard to implement the "one deployment unit, one Maven project" concept.

    3. <<Make it easier to manage repositories and dependencies>>

    The products often provide a graphical user interface that supports search and browsing of the repositories and functionality to view/add/delete artifacts.

* Repository Manager Overview

  Following is an alphabetical list of some repository managers we've heard mentioned around the Maven community:

 * {{{http://archiva.apache.org/}Apache Archiva}}

 * {{{http://www.jfrog.org/sites/artifactory/latest/}Artifactory}}

 * {{{http://nexus.sonatype.org}Nexus Repository Manager}}


~~ TODO Add link to comparison matrix on the MAVENUSER wiki that shows the which features the different products have.

~~ TODO Link to instructions for configuring repositories and mirrors

* Other resources

  * {{{http://www.theserverside.com/tt/articles/article.tss?l=SettingUpMavenRepository&nbsp;}Setting Up Maven Repository}} by Avneet Mangat

  * {{{http://docs.codehaus.org/display/MAVENUSER/Maven+Concepts+Repositories}Maven Concepts Repositories}} from Maven wiki

  * {{{http://blogs.exist.com/oching/2007/11/05/the-hype-about-repository-managers/}The Hype About Repository Managers}} by Deng Ching 

