 ------
 Guide to Naming Conventions
 ------
 Carlos Sanchez
 ------
 2005-11-01
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Guide to naming conventions on groupId, artifactId, and version

 []

 * <<groupId>> uniquely identifies your project across all projects,
 so we need to enforce a naming schema. A groupId must follow Java's package name rules. This
 means it must start with a reversed domain name you control. You can create as many subgroups
 as you want. Look at {{{https://docs.oracle.com/javase/specs/jls/se6/html/packages.html#7.7}
 More information about package names}}.

 eg. <<<org.apache.maven>>>, <<<org.apache.commons>>>

 A good way to determine the granularity of the <<<groupId>>> is to use the project structure. That is, if
 the current project is a multiple module project, it should append a new identifier to the parent's
 <<<groupId>>>. For example,

 <<<org.apache.maven>>>, <<<org.apache.maven.plugins>>>, <<<org.apache.maven.reporting>>>

 * <<artifactId>> is the name of the jar without version. If you created it, then you can choose
 whatever name you want with lowercase letters and no strange symbols. If it's a third party jar,
 you have to take the name of the jar as it's distributed.

 eg. <<<maven>>>, <<<commons-math>>>

 * <<version>> if you distribute it, then it’s recommended to follow the principles defined
 in {{{https://semver.org/spec/v2.0.0.html}Semantic Versioning Specification}}.
 Don’t use dates as your version for they are usually associated with SNAPSHOT 
 (nightly) builds. For example,

 <<<1.3.1>>>, <<<2.0>>>, <<<2.0-beta>>>, <<<3.0.17-SNAPSHOT+20180127>>>
